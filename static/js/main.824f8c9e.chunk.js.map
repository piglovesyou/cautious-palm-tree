{"version":3,"sources":["makeData.ts","undoable.ts","App.tsx","index.tsx"],"names":["range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","status","Undoable","data","max","hist","pos","this","Array","from","rowIndex","columnId","value","oldRowData","Error","newRowData","Object","create","length","shift","window","alert","currRowRef","__proto__","newRowRef","map","e","EditableCell","initialValue","columnAccessor","updateMyData","valueRef","useRef","onBlur","useCallback","currentTarget","current","onFocus","defaultValue","ItemRenderer","props","columns","index","rowStyle","style","row","rowKey","className","role","column","accessor","width","Header","undefined","key","PureComponent","getTableBodySize","viewport","document","querySelector","tableBody","offsetWidth","offsetHeight","Table","useState","w","h","updateSize","useEffect","addEventListener","debounce","height","itemCount","itemSize","itemData","App","useMemo","undoable","lens","makeDataLevel","depth","d","subRows","makeData","React","getData","setData","metaKey","shiftKey","redo","toArray","undo","preventDefault","href","onClick","querySelectorAll","backgroundColor","setNewValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.824f8c9e.chunk.js","sourcesContent":["import namor from 'namor'\n\nconst range = (len) => {\n  const arr: number[] = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst newPerson = () => {\n  const statusChance = Math.random()\n  return {\n    firstName: namor.generate({ words: 1, numbers: 0 }),\n    lastName: namor.generate({ words: 1, numbers: 0 }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? 'relationship'\n        : statusChance > 0.33\n        ? 'complicated'\n        : 'single',\n  }\n}\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth]\n    return range(len).map((d) => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      }\n    })\n  }\n\n  return makeDataLevel()\n}\n","export class Undoable<RowType extends Record<string, any>> {\n  data: RowType[]\n  max: number\n  hist: any[] = []\n  pos: number = -1\n\n  constructor(data, max) {\n    this.data = Array.from(data) // capture the array to prevent destruction from outside\n    this.max = max\n  }\n  setNewValue(rowIndex, columnId, value) {\n    const oldRowData = this.data[rowIndex]\n    if (!oldRowData) throw new Error('Never')\n    const newRowData = Object.create(oldRowData)\n    newRowData[columnId] = value\n    this.data[rowIndex] = newRowData\n    this.hist.push([rowIndex, newRowData])\n\n    if (this.hist.length > this.max) this.hist.shift()\n    else this.pos = this.hist.length - 1\n    return this\n  }\n  undo() {\n    if (this.pos < 0) {\n      window.alert(`Unable to undo. You're already in the edge of history.`)\n      return this\n    }\n    const [rowIndex, currRowRef] = this.hist[this.pos]\n    this.data[rowIndex] = currRowRef.__proto__\n    this.pos--\n    return this\n  }\n  redo() {\n    if (!this.hist[this.pos + 1]) {\n      window.alert(`Unable to redo. You're already in the edge of history.`)\n      return this\n    }\n    if (this.pos + 1 >= this.max) throw new Error('Never')\n    const [rowIndex, newRowRef] = this.hist[this.pos + 1]\n    this.data[rowIndex] = newRowRef\n    this.pos++\n    return this\n  }\n  getData() {\n    return this.data\n  }\n  toArray() {\n    return this.data.map((e) => e)\n  }\n}\n","import React, {\n  PureComponent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { FocusEvent } from 'react'\nimport { FixedSizeList, ListChildComponentProps } from 'react-window'\nimport debounce from 'lodash.debounce'\n\nimport makeData from './makeData'\nimport { Undoable } from './undoable'\n\nconst EditableCell = ({\n  value: initialValue,\n  rowIndex,\n  columnAccessor,\n  updateMyData,\n}) => {\n  const valueRef = useRef<string>('')\n\n  const onBlur = useCallback((e: FocusEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget\n    if (valueRef.current === value) return\n    updateMyData(rowIndex, columnAccessor, value)\n  }, [])\n\n  const onFocus = useCallback((e: FocusEvent<HTMLInputElement>) => {\n    valueRef.current = e.currentTarget.value\n  }, [])\n\n  return <input defaultValue={initialValue} onFocus={onFocus} onBlur={onBlur} />\n}\n\nclass ItemRenderer extends PureComponent<ListChildComponentProps> {\n  render() {\n    const {\n      data: { columns, data, updateMyData },\n      index: rowIndex,\n      style: rowStyle,\n    } = this.props\n\n    const row = data[rowIndex]\n    const rowKey = `row_${rowIndex}`\n\n    return (\n      <div style={rowStyle} className=\"tr\" role=\"row\">\n        {columns.map((column) => {\n          const { accessor, width, Header } = column\n          if (typeof accessor === 'function') {\n            return (\n              <div className=\"td\" role=\"cell\" key={Header}>\n                {accessor(row, rowIndex)}\n              </div>\n            )\n          }\n          const value = row[accessor]\n          const style = width ? { width } : undefined\n\n          // This is the trick to force rerender the DOM.\n          // In production, the modifiable factor could be timestamp.\n          const key = `${rowKey}-${Header}--${value}`\n\n          return (\n            <div key={key} className=\"td\" style={style} role=\"cell\">\n              <EditableCell\n                value={value}\n                columnAccessor={accessor}\n                rowIndex={rowIndex}\n                updateMyData={updateMyData}\n              />\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n\ntype Size = [number, number]\n\nfunction getTableBodySize(): Size {\n  const viewport = document.querySelector<HTMLDivElement>('#root')!\n  const tableBody = document.querySelector<HTMLDivElement>('.toolbar')!\n  return [viewport.offsetWidth, viewport.offsetHeight - tableBody.offsetHeight]\n}\n\nfunction Table({ columns, data, updateMyData }) {\n  const [[w, h], updateSize] = useState([2000, 2000])\n\n  useEffect(() => {\n    window.addEventListener(\n      'resize',\n      debounce(() => {\n        updateSize(getTableBodySize())\n      }, 200)\n    )\n    updateSize(getTableBodySize())\n  }, [])\n\n  return (\n    <div className=\"tableWrap\">\n      <div className=\"table\">\n        <div className=\"tr\" role=\"row\">\n          {columns.map(({ Header, accessor, width }) => {\n            const style = width ? { width } : undefined\n            return (\n              <div key={accessor} className=\"th\" style={style} role=\"cell\">\n                {Header}\n              </div>\n            )\n          })}\n        </div>\n\n        <FixedSizeList\n          className=\"tableBody\"\n          width={w}\n          height={h}\n          itemCount={data.length}\n          itemSize={35}\n          itemData={{ columns, data, updateMyData }}\n        >\n          {ItemRenderer}\n        </FixedSizeList>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Row Index',\n        accessor: (row, i) => i,\n      },\n      {\n        Header: 'First Name',\n        accessor: 'firstName',\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName',\n      },\n      {\n        Header: 'Age',\n        accessor: 'age',\n        width: 50,\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n        width: 60,\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n      },\n      {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n      },\n    ],\n    []\n  )\n\n  const undoable = useMemo(() => new Undoable(makeData(100000), 10), [])\n  const [data, setData] = React.useState(undoable.getData())\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData(undoable.setNewValue(rowIndex, columnId, value).toArray())\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (!e.metaKey) return\n      if (e.key !== 'z') return\n      if (e.shiftKey) setData(undoable.redo().toArray())\n      else setData(undoable.undo().toArray())\n      e.preventDefault()\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"toolbar\">\n        <div>The cells are editable. Hit <code>meta+z/meta+shift/z</code> to undo/redo. Note it saves the value on blur. View source on <a href=\"https://github.com/piglovesyou/cautious-palm-tree\">GitHub</a>.</div>\n        <button\n          className=\"button1\"\n          onClick={() => {\n            for (const r of document.querySelectorAll<HTMLDivElement>(\n              '[role=\"cell\"]'\n            )!)\n              r.style.backgroundColor = 'lightblue'\n          }}\n        >\n          Paint cells to check what was re-render\n        </button>\n      </div>\n      <Table columns={columns} data={data} updateMyData={updateMyData} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}